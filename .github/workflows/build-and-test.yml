name: Bash CI/CD

on:
  push:
    branches:
      - master # or main, or whichever branch you push to
  pull_request:
    branches:
      - master # or main

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Or macos-latest if you prefer to test on macOS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Build Dependencies
        # Ubuntu comes with build-essential (gcc, make, etc.) often pre-installed.
        # You might need to add specific dependencies if Bash has unusual requirements.
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Configure Bash
        run: ./configure

      - name: Build Bash
        run: make -j$(nproc) # -j$(nproc) uses all available CPU cores for faster build

      - name: Run Bash Test Suite and Capture Log
        # Capture all output (stdout and stderr) into test-results.log
        # The `tee` command allows you to see the output in the console as well.
        run: make test 2>&1 | tee test-results.log

      - name: Check for Test Failures in Log
        # This step will parse the test-results.log file.
        # If it finds any lines indicative of a test diff (failure), it will exit with a non-zero code,
        # causing this step and the job to fail.
        run: |
          echo "Analyzing test-results.log for failure indicators..."
          # Look for lines that start with a number followed by 'c' or 'd' (diff line changes/deletions)
          # OR lines that start with '< ' (actual output diff)
          # OR lines that start with '> ' (expected output diff)
          if grep -qE '^[0-9]+[cd][0-9]+|^< |^> ' test-results.log; then
            echo "--- Test Failures Detected! ---"
            echo "Diff output found in test-results.log. Please check the 'bash-test-log' artifact for details."
            exit 1 # Exit with non-zero code to fail the GitHub Actions step
          else
            echo "No test failures (diffs) detected."
            exit 0 # Exit with zero code to pass the GitHub Actions step
          fi

      - name: Upload Test Results Log (on failure or success)
        # Always upload the log so you can inspect it, even if the tests failed.
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bash-test-log
          path: test-results.log

      - name: Test Summary
        # This step will only run if the 'Check for Test Failures in Log' step passed.
        if: success()
        run: |
          echo "All Bash tests passed based on log analysis!"
          # Optionally, you could parse the log for a "summary" if Bash's test suite provides one
          # and print it here.
